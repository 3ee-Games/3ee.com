import{S as el,i as ol,s as pl,C as ho,w as yo,x as mo,y as bo,z as ll,A as Cp,q as _o,o as Eo,B as vo,a1 as Up,e as t,t as r,k as u,c as e,a as o,h as i,d as n,m as c,b as k,g as l,G as a,E as rl}from"../../chunks/index-2a82a4a8.js";import{P as il}from"../../chunks/_post-913f18eb.js";import{I as ul}from"../../chunks/IssueTracker-c6a68b55.js";import{S as cl}from"../../chunks/SpaceLabTeaser-a5ec8b93.js";import"../../chunks/Player-9202028c.js";import"../../chunks/menuContextStore-c2e700c4.js";import"../../chunks/index-16dda89e.js";import"../../chunks/accountStore-3492c591.js";import"../../chunks/svgMapper-02b39f71.js";import"../../chunks/navigation-0e6511d1.js";import"../../chunks/singletons-d1fb5791.js";function kl(bs){let f,b,m,ss,d,y,A,et,zn,h,Ys,Xs,ot,pt,Zs,Vs,lt,rt,sn,nn,it,ut,an,tn,ct,kt,en,on,ft,Jn,Kn,Yn,O,P,pn,dt,Xn,_s,ht,Zn,Es,ln,yt,Vn,_,vs,rn,mt,bt,_t,ws,un,Et,vt,wt,gs,cn,gt,Tt,sa,ns,kn,At,St,na,aa,ta,R,H,fn,Gt,ea,Ts,Nt,oa,L,x,dn,Ot,pa,E,as,Pt,hn,Rt,Ht,Lt,$,xt,yn,$t,It,S,As,mn,Ct,Ut,jt,Ss,bn,qt,Dt,Qt,Gs,_n,Wt,Bt,Ft,En,Mt,la,I,C,vn,zt,ra,v,ts,Jt,wn,Kt,Yt,Xt,G,Zt,gn,Vt,se,Tn,ne,ae,te,An,ee,ia,es,qp='<code class="language-yaml">TOKEN=$<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.PAT_TOKEN <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code>',ua,ca,ka,U,j,Sn,oe,fa,Ns,pe,da,os,Dp=`<code class="language-undefined">.github/workflows
    - api-issue-tracker.yml
    - hoa-issue-tracker.yml
    - website-issue-tracker.yml

public
    - api-issue-count.json
    - frontend-issue-count.json
    - hoa-issue-count.json</code>`,ha,q,D,Gn,le,ya,ps,Qp=`<code class="language-yaml"><span class="token key atrule">name</span><span class="token punctuation">:</span> Track 3ee API Resolved Issues

<span class="token key atrule">on</span><span class="token punctuation">:</span>
  <span class="token key atrule">schedule</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">cron</span><span class="token punctuation">:</span> <span class="token string">'0 0 * * *'</span>  <span class="token comment">#Runs daily at midnight</span>
  <span class="token key atrule">workflow_dispatch</span><span class="token punctuation">:</span>  <span class="token comment">#Manual trigger</span>

<span class="token key atrule">permissions</span><span class="token punctuation">:</span>
  <span class="token key atrule">contents</span><span class="token punctuation">:</span> write
  <span class="token key atrule">issues</span><span class="token punctuation">:</span> read

<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token key atrule">track-issues</span><span class="token punctuation">:</span>
    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout Repository
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v3
        
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Fetch All Closed Issues (GraphQL)
        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
          TOKEN=$&#123;&#123; secrets.PAT_TOKEN &#125;&#125;
          OWNER="3ee-Games"
          REPO="3ee-api"</span>

          fetch_issues() <span class="token punctuation">&#123;</span>
            LABEL=$1
            END_CURSOR=$2

            QUERY="<span class="token punctuation">&#123;</span><span class="token key atrule">"query"</span><span class="token punctuation">:</span> "query <span class="token punctuation">&#123;</span>
              <span class="token key atrule">repository(owner</span><span class="token punctuation">:</span> \\"$OWNER\\"<span class="token punctuation">,</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> \\"$REPO\\") <span class="token punctuation">&#123;</span>
                <span class="token key atrule">issues(first</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token key atrule">labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>\\"$LABEL\\"<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token key atrule">states</span><span class="token punctuation">:</span> CLOSED<span class="token punctuation">,</span> <span class="token key atrule">after</span><span class="token punctuation">:</span> $END_CURSOR) <span class="token punctuation">&#123;</span>
                  totalCount
                  pageInfo <span class="token punctuation">&#123;</span>
                    endCursor
                    hasNextPage
                  <span class="token punctuation">&#125;</span>
                <span class="token punctuation">&#125;</span>
              <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>"<span class="token punctuation">&#125;</span>"
            
            echo $QUERY
          <span class="token punctuation">&#125;</span>

          count_issues_by_label() <span class="token punctuation">&#123;</span>
            LABEL=$1
            TOTAL_COUNT=0
            END_CURSOR="null"

            while <span class="token punctuation">:</span>; do
              QUERY=$(fetch_issues "$LABEL" "$END_CURSOR")

              <span class="token key atrule">RESPONSE=$(curl -s -X POST -H "Authorization</span><span class="token punctuation">:</span> <span class="token key atrule">Bearer $TOKEN" -H "Content-Type</span><span class="token punctuation">:</span> application/json" <span class="token punctuation">-</span>d "$QUERY" https<span class="token punctuation">:</span>//api.github.com/graphql)

              BUG_COUNT=$(echo $RESPONSE <span class="token punctuation">|</span> jq '.data.repository.issues.totalCount')
              TOTAL_COUNT=$((TOTAL_COUNT + BUG_COUNT))

              HAS_NEXT_PAGE=$(echo $RESPONSE <span class="token punctuation">|</span> jq '.data.repository.issues.pageInfo.hasNextPage')
              END_CURSOR=$(echo $RESPONSE <span class="token punctuation">|</span> jq <span class="token punctuation">-</span>r '.data.repository.issues.pageInfo.endCursor')

              if <span class="token punctuation">[</span> "$HAS_NEXT_PAGE" <span class="token tag">!=</span> "true" <span class="token punctuation">]</span>; then
                break
              fi
            done

            echo "$TOTAL_COUNT"
          <span class="token punctuation">&#125;</span>

          BUG_COUNT=$(count_issues_by_label "bug")
          DOC_COUNT=$(count_issues_by_label "documentation")
          ENHANCEMENT_COUNT=$(count_issues_by_label "enhancement")

          mkdir <span class="token punctuation">-</span>p public
          echo "<span class="token punctuation">&#123;</span>
            <span class="token key atrule">"resolved_bugs"</span><span class="token punctuation">:</span> $BUG_COUNT<span class="token punctuation">,</span>
            <span class="token key atrule">"resolved_documentation"</span><span class="token punctuation">:</span> $DOC_COUNT<span class="token punctuation">,</span>
            <span class="token key atrule">"resolved_enhancements"</span><span class="token punctuation">:</span> $ENHANCEMENT_COUNT
          <span class="token punctuation">&#125;</span>" <span class="token punctuation">></span> public/api<span class="token punctuation">-</span>issue<span class="token punctuation">-</span>count.json

      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Commit and Push Issue Counts
        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add public/api-issue-count.json
          git commit -m "Update issue counts" || echo "No changes to commit"
          git push</span></code>`,ma,ba,_a,Q,W,Nn,re,Ea,B,ie,On,ue,ce,va,w,Os,Pn,ke,fe,de,g,Rn,he,ye,Hn,me,be,Ln,_e,Ee,ve,Ps,xn,we,ge,wa,Rs,Te,ga,F,M,$n,Ae,Ta,Hs,Se,Aa,Ls,In,Ge,Sa,ls,Wp=`<code class="language-graphql">
<span class="token punctuation">&#123;</span>
  <span class="token property-query">repository</span><span class="token punctuation">(</span><span class="token attr-name">owner</span><span class="token punctuation">:</span> <span class="token string">"3ee-Games"</span><span class="token punctuation">,</span> <span class="token attr-name">name</span><span class="token punctuation">:</span> <span class="token string">"3ee-api"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token property-query">issues</span><span class="token punctuation">(</span><span class="token attr-name">first</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token attr-name">labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"bug"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token attr-name">states</span><span class="token punctuation">:</span> <span class="token constant">CLOSED</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      <span class="token object">edges</span> <span class="token punctuation">&#123;</span>
        <span class="token object">node</span> <span class="token punctuation">&#123;</span>
          <span class="token property">title</span>
          <span class="token property">state</span>
          <span class="token property-query">labels</span><span class="token punctuation">(</span><span class="token attr-name">first</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token object">edges</span> <span class="token punctuation">&#123;</span>
              <span class="token object">node</span> <span class="token punctuation">&#123;</span>
                <span class="token property">name</span>
              <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
          <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
      <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,Ga,xs,Cn,Ne,Na,rs,Bp=`<code class="language-json"><span class="token punctuation">&#123;</span>
  <span class="token property">"data"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token property">"repository"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
      <span class="token property">"issues"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
        <span class="token property">"edges"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">&#123;</span>
            <span class="token property">"node"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
              <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Fix login bug"</span><span class="token punctuation">,</span>
              <span class="token property">"state"</span><span class="token operator">:</span> <span class="token string">"CLOSED"</span><span class="token punctuation">,</span>
              <span class="token property">"labels"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
                <span class="token property">"edges"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                  <span class="token punctuation">&#123;</span> <span class="token property">"node"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"bug"</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span>
                <span class="token punctuation">]</span>
              <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
          <span class="token punctuation">&#123;</span>
            <span class="token property">"node"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
              <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Resolve API timeout"</span><span class="token punctuation">,</span>
              <span class="token property">"state"</span><span class="token operator">:</span> <span class="token string">"CLOSED"</span><span class="token punctuation">,</span>
              <span class="token property">"labels"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
                <span class="token property">"edges"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                  <span class="token punctuation">&#123;</span> <span class="token property">"node"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"bug"</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
                  <span class="token punctuation">&#123;</span> <span class="token property">"node"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"urgent"</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span>
                <span class="token punctuation">]</span>
              <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
          <span class="token punctuation">&#125;</span>
        <span class="token punctuation">]</span>
      <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,Oa,z,J,Un,Oe,Pa,$s,Pe,Ra,Is,jn,Re,Ha,is,Fp=`<code class="language-bash"><span class="token function">curl</span> -s -H <span class="token string">"Authorization: token <span class="token variable">$TOKEN</span>"</span> <span class="token punctuation"></span>
  <span class="token string">"https://api.github.com/repos/3ee-Games/3ee-api/issues?state=closed&amp;labels=bug"</span>
</code>`,La,Cs,qn,He,xa,us,Mp=`<code class="language-json"><span class="token punctuation">[</span>
  <span class="token punctuation">&#123;</span>
    <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">123456789</span><span class="token punctuation">,</span>
    <span class="token property">"node_id"</span><span class="token operator">:</span> <span class="token string">"MDU6SXNzdWUxMjM0NTY3ODk="</span><span class="token punctuation">,</span>
    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Fix login bug"</span><span class="token punctuation">,</span>
    <span class="token property">"state"</span><span class="token operator">:</span> <span class="token string">"closed"</span><span class="token punctuation">,</span>
    <span class="token property">"labels"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">&#123;</span>
        <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">987654321</span><span class="token punctuation">,</span>
        <span class="token property">"node_id"</span><span class="token operator">:</span> <span class="token string">"MDU6TGFiZWw5ODc2NTQzMjE="</span><span class="token punctuation">,</span>
        <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"bug"</span><span class="token punctuation">,</span>
        <span class="token property">"color"</span><span class="token operator">:</span> <span class="token string">"d73a4a"</span><span class="token punctuation">,</span>
        <span class="token property">"default"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Something isn't working"</span>
      <span class="token punctuation">&#125;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"locked"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">"comments"</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
    <span class="token property">"created_at"</span><span class="token operator">:</span> <span class="token string">"2023-01-01T12:00:00Z"</span><span class="token punctuation">,</span>
    <span class="token property">"updated_at"</span><span class="token operator">:</span> <span class="token string">"2023-01-05T15:30:00Z"</span><span class="token punctuation">,</span>
    <span class="token property">"closed_at"</span><span class="token operator">:</span> <span class="token string">"2023-01-05T15:30:00Z"</span><span class="token punctuation">,</span>
    <span class="token property">"author_association"</span><span class="token operator">:</span> <span class="token string">"CONTRIBUTOR"</span><span class="token punctuation">,</span>
    <span class="token property">"body"</span><span class="token operator">:</span> <span class="token string">"Steps to reproduce the issue..."</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">]</span></code>`,$a,Us,Le,Ia,Ca,Ua,K,Y,Dn,xe,ja,js,$e,qa,cs,zp=`<code class="language-json"><span class="token punctuation">&#123;</span>
  <span class="token property">"resolved_bugs"</span><span class="token operator">:</span> <span class="token number">41</span><span class="token punctuation">,</span>
  <span class="token property">"resolved_documentation"</span><span class="token operator">:</span> <span class="token number">9</span><span class="token punctuation">,</span>
  <span class="token property">"resolved_enhancements"</span><span class="token operator">:</span> <span class="token number">57</span>
<span class="token punctuation">&#125;</span></code>`,Da,N,Ie,Qn,Ce,Ue,ks,je,Qa,qs,qe,Wa,fs,Jp=`<code class="language-javascript">
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fetchIssueData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://raw.githubusercontent.com/3ee-Games/github-actions/refs/heads/main/public/api-issue-count.json'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>response<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">Failed to fetch: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>response<span class="token punctuation">.</span>status<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>

        <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Resolved Bugs:'</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>resolved_bugs<span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Resolved Documentation Issues:'</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>resolved_documentation<span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Resolved Enhancements:'</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>resolved_enhancements<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span> 
    <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'Error fetching issue data:'</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token function">fetchIssueData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,Ba,Ds,Wn,De,Fa,Qs,Qe,Ma,ds,za,Ja,Ka,X,Z,Bn,We,Ya,Ws,Be,Xa,V,Fe,hs,Me,ze,Za,ys,Va;return ds=new ul({}),ys=new cl({}),{c(){f=t("p"),b=r("This blog post walks through how we use "),m=t("strong"),ss=r("GitHub Actions"),d=r(" to automate fetching completed issues by label: bug counts, enhancements, and documentation updates."),y=u(),A=t("p"),et=r("In this guide, you\u2019ll learn:"),zn=u(),h=t("ul"),Ys=t("li"),Xs=t("strong"),ot=r("What GitHub Actions are and how to set them up"),pt=u(),Zs=t("li"),Vs=t("strong"),lt=r("How to securely reference PAT tokens to access private repo data"),rt=u(),sn=t("li"),nn=t("strong"),it=r("Breaking down each part of a GitHub Action workflow"),ut=u(),an=t("li"),tn=t("strong"),ct=r("Why we use GraphQL for fetching data"),kt=u(),en=t("li"),on=t("strong"),ft=r("How to output JSON for frontend use"),Jn=u(),Kn=t("hr"),Yn=u(),O=t("h2"),P=t("a"),pn=t("span"),dt=r("What are GitHub Actions?"),Xn=u(),_s=t("p"),ht=r("GitHub Actions are automation workflows you can trigger directly in your GitHub repositories. Whether you want to run tests, deploy code, or automate administrative tasks (like tracking issues), Actions make it easy to build and deploy code automatically."),Zn=u(),Es=t("p"),ln=t("strong"),yt=r("How it Works:"),Vn=u(),_=t("ul"),vs=t("li"),rn=t("strong"),mt=r("Event-driven:"),bt=r(" Actions trigger on events (like pushing to a repo or opening an issue)."),_t=u(),ws=t("li"),un=t("strong"),Et=r("Flexible:"),vt=r(" You can run custom scripts or use pre-built actions from the GitHub Marketplace."),wt=u(),gs=t("li"),cn=t("strong"),gt=r("Scalable:"),Tt=r(" Actions run on virtual environments (Ubuntu)."),sa=u(),ns=t("p"),kn=t("strong"),At=r("For our issue tracker,"),St=r(" we use GitHub Actions to fetch the latest bug/enhancement data daily and store it in a JSON file that the frontend reads."),na=u(),aa=t("hr"),ta=u(),R=t("h2"),H=t("a"),fn=t("span"),Gt=r("Setting Up GitHub Personal Access Tokens (PAT)"),ea=u(),Ts=t("p"),Nt=r("Since our repositories are private, we need a secure way to fetch issue data. GitHub Personal Access Tokens (PAT) grant fine-grained access to your repositories."),oa=u(),L=t("h3"),x=t("a"),dn=t("span"),Ot=r("Steps to Generate a PAT:"),pa=u(),E=t("ol"),as=t("li"),Pt=r("Go to "),hn=t("strong"),Rt=r("Settings > Developer Settings > Personal Access Tokens"),Ht=r(" on GitHub."),Lt=u(),$=t("li"),xt=r("Click "),yn=t("strong"),$t=r("Generate new token"),It=r(" and select the following scopes:  "),S=t("ul"),As=t("li"),mn=t("code"),Ct=r("repo"),Ut=r(" \u2013 Full control of private repositories"),jt=u(),Ss=t("li"),bn=t("code"),qt=r("read:org"),Dt=r(" \u2013 Read organization-level information"),Qt=u(),Gs=t("li"),_n=t("code"),Wt=r("issues"),Bt=r(" \u2013 Read issues data"),Ft=u(),En=t("li"),Mt=r("Copy the token \u2013 this is your key for API access."),la=u(),I=t("h3"),C=t("a"),vn=t("span"),zt=r("Storing and Referencing the PAT Securely:"),ra=u(),v=t("ul"),ts=t("li"),Jt=r("In your repository, go to "),wn=t("strong"),Kt=r("Settings > Secrets and Variables > Actions"),Yt=r("."),Xt=u(),G=t("li"),Zt=r("Click "),gn=t("strong"),Vt=r("New Repository Secret"),se=r(" and name it "),Tn=t("code"),ne=r("PAT_TOKEN"),ae=r("."),te=u(),An=t("li"),ee=r("In your GitHub Actions workflow, reference the secret like this:"),ia=u(),es=t("pre"),ua=u(),ca=t("hr"),ka=u(),U=t("h2"),j=t("a"),Sn=t("span"),oe=r("Breaking Down the GitHub Action Workflow"),fa=u(),Ns=t("p"),pe=r("Now that our token is set up, let\u2019s break down the GitHub Action workflow we use to track issues. Each repository (API, game, and website) has a separate workflow, outputting to its own JSON file."),da=u(),os=t("pre"),ha=u(),q=t("h3"),D=t("a"),Gn=t("span"),le=r("Example Workflow"),ya=u(),ps=t("pre"),ma=u(),ba=t("hr"),_a=u(),Q=t("h2"),W=t("a"),Nn=t("span"),re=r("Why Use GraphQL?"),Ea=u(),B=t("p"),ie=r("GitHub\u2019s REST API can be limiting when fetching large amounts of data. GraphQL allows us to request "),On=t("strong"),ue=r("exactly the data we need"),ce=r(" in a single query, reducing the number of API calls."),va=u(),w=t("ul"),Os=t("li"),Pn=t("strong"),ke=r("Efficiency:"),fe=r(" Fetches all labeled issues in one request."),de=u(),g=t("li"),Rn=t("strong"),he=r("Pagination:"),ye=r(" Handles pagination gracefully using "),Hn=t("code"),me=r("endCursor"),be=r(" and "),Ln=t("code"),_e=r("hasNextPage"),Ee=r("."),ve=u(),Ps=t("li"),xn=t("strong"),we=r("Customizable:"),ge=r(" We can adjust queries dynamically by passing labels or states."),wa=u(),Rs=t("p"),Te=r("In the next section, I\u2019ll illustrate the difference between using GraphQL and REST, from the query to the response and how we can use that response to build a frontend component."),ga=u(),F=t("h3"),M=t("a"),$n=t("span"),Ae=r("GraphQL returning exactly what we want"),Ta=u(),Hs=t("p"),Se=r("GraphQL returns only the requested fields (title, state, and labels). No unnecessary data is retrieved."),Aa=u(),Ls=t("p"),In=t("strong"),Ge=r("Query:"),Sa=u(),ls=t("pre"),Ga=u(),xs=t("p"),Cn=t("strong"),Ne=r("Output:"),Na=u(),rs=t("pre"),Oa=u(),z=t("h3"),J=t("a"),Un=t("span"),Oe=r("REST returning everything"),Pa=u(),$s=t("p"),Pe=r("REST returns everything by default (user info, timestamps, full issue body, comments, etc.), even if you don\u2019t need it."),Ra=u(),Is=t("p"),jn=t("strong"),Re=r("Query:"),Ha=u(),is=t("pre"),La=u(),Cs=t("p"),qn=t("strong"),He=r("Output:"),xa=u(),us=t("pre"),$a=u(),Us=t("p"),Le=r("This is why GraphQL is more efficient for fetching exactly what you need, reducing payload size and improving performance."),Ia=u(),Ca=t("hr"),Ua=u(),K=t("h2"),Y=t("a"),Dn=t("span"),xe=r("Outputting to JSON for Frontend Use"),ja=u(),js=t("p"),$e=r("Each time the action runs, it generates a JSON file that looks like this:"),qa=u(),cs=t("pre"),Da=u(),N=t("p"),Ie=r("These files live in the "),Qn=t("code"),Ce=r("public"),Ue=r(" folder and are read by frontend components to display live issue counts: "),ks=t("a"),je=r("https://github.com/3ee-Games/github-actions/tree/main/public"),Qa=u(),qs=t("p"),qe=r("We can build a simple component that makes a call to those json files the actions created.  In this example, we\u2019ll log the response:"),Wa=u(),fs=t("pre"),Ba=u(),Ds=t("blockquote"),Wn=t("p"),De=r("\u{1F4C4} You can copy and paste this code in your browser\u2019s console and it will return a json object."),Fa=u(),Qs=t("p"),Qe=r("The next step is to build out a frontend component using html and css. Below is the component that was built and used on the homepage of this website:"),Ma=u(),yo(ds.$$.fragment),za=u(),Ja=t("hr"),Ka=u(),X=t("h3"),Z=t("a"),Bn=t("span"),We=r("Final Thoughts"),Ya=u(),Ws=t("p"),Be=r("GitHub Actions provide a powerful way to automate issue tracking and boost transparency. By integrating GraphQL and automating with cron jobs, we can stay organized and communicate our progress with players in real-time."),Xa=u(),V=t("p"),Fe=r("Ready to set up your own tracker? "),hs=t("a"),Me=r("Fork our repo"),ze=r(" and start automating your project."),Za=u(),yo(ys.$$.fragment),this.h()},l(s){f=e(s,"P",{});var p=o(f);b=i(p,"This blog post walks through how we use "),m=e(p,"STRONG",{});var wo=o(m);ss=i(wo,"GitHub Actions"),wo.forEach(n),d=i(p," to automate fetching completed issues by label: bug counts, enhancements, and documentation updates."),p.forEach(n),y=c(s),A=e(s,"P",{});var go=o(A);et=i(go,"In this guide, you\u2019ll learn:"),go.forEach(n),zn=c(s),h=e(s,"UL",{});var T=o(h);Ys=e(T,"LI",{});var To=o(Ys);Xs=e(To,"STRONG",{});var Ao=o(Xs);ot=i(Ao,"What GitHub Actions are and how to set them up"),Ao.forEach(n),To.forEach(n),pt=c(T),Zs=e(T,"LI",{});var So=o(Zs);Vs=e(So,"STRONG",{});var Go=o(Vs);lt=i(Go,"How to securely reference PAT tokens to access private repo data"),Go.forEach(n),So.forEach(n),rt=c(T),sn=e(T,"LI",{});var No=o(sn);nn=e(No,"STRONG",{});var Oo=o(nn);it=i(Oo,"Breaking down each part of a GitHub Action workflow"),Oo.forEach(n),No.forEach(n),ut=c(T),an=e(T,"LI",{});var Po=o(an);tn=e(Po,"STRONG",{});var Ro=o(tn);ct=i(Ro,"Why we use GraphQL for fetching data"),Ro.forEach(n),Po.forEach(n),kt=c(T),en=e(T,"LI",{});var Ho=o(en);on=e(Ho,"STRONG",{});var Lo=o(on);ft=i(Lo,"How to output JSON for frontend use"),Lo.forEach(n),Ho.forEach(n),T.forEach(n),Jn=c(s),Kn=e(s,"HR",{}),Yn=c(s),O=e(s,"H2",{id:!0});var Je=o(O);P=e(Je,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var xo=o(P);pn=e(xo,"SPAN",{class:!0}),o(pn).forEach(n),xo.forEach(n),dt=i(Je,"What are GitHub Actions?"),Je.forEach(n),Xn=c(s),_s=e(s,"P",{});var $o=o(_s);ht=i($o,"GitHub Actions are automation workflows you can trigger directly in your GitHub repositories. Whether you want to run tests, deploy code, or automate administrative tasks (like tracking issues), Actions make it easy to build and deploy code automatically."),$o.forEach(n),Zn=c(s),Es=e(s,"P",{});var Io=o(Es);ln=e(Io,"STRONG",{});var Co=o(ln);yt=i(Co,"How it Works:"),Co.forEach(n),Io.forEach(n),Vn=c(s),_=e(s,"UL",{});var Bs=o(_);vs=e(Bs,"LI",{});var Ke=o(vs);rn=e(Ke,"STRONG",{});var Uo=o(rn);mt=i(Uo,"Event-driven:"),Uo.forEach(n),bt=i(Ke," Actions trigger on events (like pushing to a repo or opening an issue)."),Ke.forEach(n),_t=c(Bs),ws=e(Bs,"LI",{});var Ye=o(ws);un=e(Ye,"STRONG",{});var jo=o(un);Et=i(jo,"Flexible:"),jo.forEach(n),vt=i(Ye," You can run custom scripts or use pre-built actions from the GitHub Marketplace."),Ye.forEach(n),wt=c(Bs),gs=e(Bs,"LI",{});var Xe=o(gs);cn=e(Xe,"STRONG",{});var qo=o(cn);gt=i(qo,"Scalable:"),qo.forEach(n),Tt=i(Xe," Actions run on virtual environments (Ubuntu)."),Xe.forEach(n),Bs.forEach(n),sa=c(s),ns=e(s,"P",{});var Ze=o(ns);kn=e(Ze,"STRONG",{});var Do=o(kn);At=i(Do,"For our issue tracker,"),Do.forEach(n),St=i(Ze," we use GitHub Actions to fetch the latest bug/enhancement data daily and store it in a JSON file that the frontend reads."),Ze.forEach(n),na=c(s),aa=e(s,"HR",{}),ta=c(s),R=e(s,"H2",{id:!0});var Ve=o(R);H=e(Ve,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Qo=o(H);fn=e(Qo,"SPAN",{class:!0}),o(fn).forEach(n),Qo.forEach(n),Gt=i(Ve,"Setting Up GitHub Personal Access Tokens (PAT)"),Ve.forEach(n),ea=c(s),Ts=e(s,"P",{});var Wo=o(Ts);Nt=i(Wo,"Since our repositories are private, we need a secure way to fetch issue data. GitHub Personal Access Tokens (PAT) grant fine-grained access to your repositories."),Wo.forEach(n),oa=c(s),L=e(s,"H3",{id:!0});var so=o(L);x=e(so,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Bo=o(x);dn=e(Bo,"SPAN",{class:!0}),o(dn).forEach(n),Bo.forEach(n),Ot=i(so,"Steps to Generate a PAT:"),so.forEach(n),pa=c(s),E=e(s,"OL",{});var Fs=o(E);as=e(Fs,"LI",{});var st=o(as);Pt=i(st,"Go to "),hn=e(st,"STRONG",{});var Fo=o(hn);Rt=i(Fo,"Settings > Developer Settings > Personal Access Tokens"),Fo.forEach(n),Ht=i(st," on GitHub."),st.forEach(n),Lt=c(Fs),$=e(Fs,"LI",{});var Fn=o($);xt=i(Fn,"Click "),yn=e(Fn,"STRONG",{});var Mo=o(yn);$t=i(Mo,"Generate new token"),Mo.forEach(n),It=i(Fn," and select the following scopes:  "),S=e(Fn,"UL",{});var Ms=o(S);As=e(Ms,"LI",{});var no=o(As);mn=e(no,"CODE",{});var zo=o(mn);Ct=i(zo,"repo"),zo.forEach(n),Ut=i(no," \u2013 Full control of private repositories"),no.forEach(n),jt=c(Ms),Ss=e(Ms,"LI",{});var ao=o(Ss);bn=e(ao,"CODE",{});var Jo=o(bn);qt=i(Jo,"read:org"),Jo.forEach(n),Dt=i(ao," \u2013 Read organization-level information"),ao.forEach(n),Qt=c(Ms),Gs=e(Ms,"LI",{});var to=o(Gs);_n=e(to,"CODE",{});var Ko=o(_n);Wt=i(Ko,"issues"),Ko.forEach(n),Bt=i(to," \u2013 Read issues data"),to.forEach(n),Ms.forEach(n),Fn.forEach(n),Ft=c(Fs),En=e(Fs,"LI",{});var Yo=o(En);Mt=i(Yo,"Copy the token \u2013 this is your key for API access."),Yo.forEach(n),Fs.forEach(n),la=c(s),I=e(s,"H3",{id:!0});var eo=o(I);C=e(eo,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Xo=o(C);vn=e(Xo,"SPAN",{class:!0}),o(vn).forEach(n),Xo.forEach(n),zt=i(eo,"Storing and Referencing the PAT Securely:"),eo.forEach(n),ra=c(s),v=e(s,"UL",{});var zs=o(v);ts=e(zs,"LI",{});var nt=o(ts);Jt=i(nt,"In your repository, go to "),wn=e(nt,"STRONG",{});var Zo=o(wn);Kt=i(Zo,"Settings > Secrets and Variables > Actions"),Zo.forEach(n),Yt=i(nt,"."),nt.forEach(n),Xt=c(zs),G=e(zs,"LI",{});var Js=o(G);Zt=i(Js,"Click "),gn=e(Js,"STRONG",{});var Vo=o(gn);Vt=i(Vo,"New Repository Secret"),Vo.forEach(n),se=i(Js," and name it "),Tn=e(Js,"CODE",{});var sp=o(Tn);ne=i(sp,"PAT_TOKEN"),sp.forEach(n),ae=i(Js,"."),Js.forEach(n),te=c(zs),An=e(zs,"LI",{});var np=o(An);ee=i(np,"In your GitHub Actions workflow, reference the secret like this:"),np.forEach(n),zs.forEach(n),ia=c(s),es=e(s,"PRE",{class:!0});var Kp=o(es);Kp.forEach(n),ua=c(s),ca=e(s,"HR",{}),ka=c(s),U=e(s,"H2",{id:!0});var oo=o(U);j=e(oo,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var ap=o(j);Sn=e(ap,"SPAN",{class:!0}),o(Sn).forEach(n),ap.forEach(n),oe=i(oo,"Breaking Down the GitHub Action Workflow"),oo.forEach(n),fa=c(s),Ns=e(s,"P",{});var tp=o(Ns);pe=i(tp,"Now that our token is set up, let\u2019s break down the GitHub Action workflow we use to track issues. Each repository (API, game, and website) has a separate workflow, outputting to its own JSON file."),tp.forEach(n),da=c(s),os=e(s,"PRE",{class:!0});var Yp=o(os);Yp.forEach(n),ha=c(s),q=e(s,"H3",{id:!0});var po=o(q);D=e(po,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var ep=o(D);Gn=e(ep,"SPAN",{class:!0}),o(Gn).forEach(n),ep.forEach(n),le=i(po,"Example Workflow"),po.forEach(n),ya=c(s),ps=e(s,"PRE",{class:!0});var Xp=o(ps);Xp.forEach(n),ma=c(s),ba=e(s,"HR",{}),_a=c(s),Q=e(s,"H2",{id:!0});var lo=o(Q);W=e(lo,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var op=o(W);Nn=e(op,"SPAN",{class:!0}),o(Nn).forEach(n),op.forEach(n),re=i(lo,"Why Use GraphQL?"),lo.forEach(n),Ea=c(s),B=e(s,"P",{});var at=o(B);ie=i(at,"GitHub\u2019s REST API can be limiting when fetching large amounts of data. GraphQL allows us to request "),On=e(at,"STRONG",{});var pp=o(On);ue=i(pp,"exactly the data we need"),pp.forEach(n),ce=i(at," in a single query, reducing the number of API calls."),at.forEach(n),va=c(s),w=e(s,"UL",{});var Ks=o(w);Os=e(Ks,"LI",{});var ro=o(Os);Pn=e(ro,"STRONG",{});var lp=o(Pn);ke=i(lp,"Efficiency:"),lp.forEach(n),fe=i(ro," Fetches all labeled issues in one request."),ro.forEach(n),de=c(Ks),g=e(Ks,"LI",{});var ms=o(g);Rn=e(ms,"STRONG",{});var rp=o(Rn);he=i(rp,"Pagination:"),rp.forEach(n),ye=i(ms," Handles pagination gracefully using "),Hn=e(ms,"CODE",{});var ip=o(Hn);me=i(ip,"endCursor"),ip.forEach(n),be=i(ms," and "),Ln=e(ms,"CODE",{});var up=o(Ln);_e=i(up,"hasNextPage"),up.forEach(n),Ee=i(ms,"."),ms.forEach(n),ve=c(Ks),Ps=e(Ks,"LI",{});var io=o(Ps);xn=e(io,"STRONG",{});var cp=o(xn);we=i(cp,"Customizable:"),cp.forEach(n),ge=i(io," We can adjust queries dynamically by passing labels or states."),io.forEach(n),Ks.forEach(n),wa=c(s),Rs=e(s,"P",{});var kp=o(Rs);Te=i(kp,"In the next section, I\u2019ll illustrate the difference between using GraphQL and REST, from the query to the response and how we can use that response to build a frontend component."),kp.forEach(n),ga=c(s),F=e(s,"H3",{id:!0});var uo=o(F);M=e(uo,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var fp=o(M);$n=e(fp,"SPAN",{class:!0}),o($n).forEach(n),fp.forEach(n),Ae=i(uo,"GraphQL returning exactly what we want"),uo.forEach(n),Ta=c(s),Hs=e(s,"P",{});var dp=o(Hs);Se=i(dp,"GraphQL returns only the requested fields (title, state, and labels). No unnecessary data is retrieved."),dp.forEach(n),Aa=c(s),Ls=e(s,"P",{});var hp=o(Ls);In=e(hp,"STRONG",{});var yp=o(In);Ge=i(yp,"Query:"),yp.forEach(n),hp.forEach(n),Sa=c(s),ls=e(s,"PRE",{class:!0});var Zp=o(ls);Zp.forEach(n),Ga=c(s),xs=e(s,"P",{});var mp=o(xs);Cn=e(mp,"STRONG",{});var bp=o(Cn);Ne=i(bp,"Output:"),bp.forEach(n),mp.forEach(n),Na=c(s),rs=e(s,"PRE",{class:!0});var Vp=o(rs);Vp.forEach(n),Oa=c(s),z=e(s,"H3",{id:!0});var co=o(z);J=e(co,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var _p=o(J);Un=e(_p,"SPAN",{class:!0}),o(Un).forEach(n),_p.forEach(n),Oe=i(co,"REST returning everything"),co.forEach(n),Pa=c(s),$s=e(s,"P",{});var Ep=o($s);Pe=i(Ep,"REST returns everything by default (user info, timestamps, full issue body, comments, etc.), even if you don\u2019t need it."),Ep.forEach(n),Ra=c(s),Is=e(s,"P",{});var vp=o(Is);jn=e(vp,"STRONG",{});var wp=o(jn);Re=i(wp,"Query:"),wp.forEach(n),vp.forEach(n),Ha=c(s),is=e(s,"PRE",{class:!0});var sl=o(is);sl.forEach(n),La=c(s),Cs=e(s,"P",{});var gp=o(Cs);qn=e(gp,"STRONG",{});var Tp=o(qn);He=i(Tp,"Output:"),Tp.forEach(n),gp.forEach(n),xa=c(s),us=e(s,"PRE",{class:!0});var nl=o(us);nl.forEach(n),$a=c(s),Us=e(s,"P",{});var Ap=o(Us);Le=i(Ap,"This is why GraphQL is more efficient for fetching exactly what you need, reducing payload size and improving performance."),Ap.forEach(n),Ia=c(s),Ca=e(s,"HR",{}),Ua=c(s),K=e(s,"H2",{id:!0});var ko=o(K);Y=e(ko,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Sp=o(Y);Dn=e(Sp,"SPAN",{class:!0}),o(Dn).forEach(n),Sp.forEach(n),xe=i(ko,"Outputting to JSON for Frontend Use"),ko.forEach(n),ja=c(s),js=e(s,"P",{});var Gp=o(js);$e=i(Gp,"Each time the action runs, it generates a JSON file that looks like this:"),Gp.forEach(n),qa=c(s),cs=e(s,"PRE",{class:!0});var al=o(cs);al.forEach(n),Da=c(s),N=e(s,"P",{});var Mn=o(N);Ie=i(Mn,"These files live in the "),Qn=e(Mn,"CODE",{});var Np=o(Qn);Ce=i(Np,"public"),Np.forEach(n),Ue=i(Mn," folder and are read by frontend components to display live issue counts: "),ks=e(Mn,"A",{href:!0,rel:!0});var Op=o(ks);je=i(Op,"https://github.com/3ee-Games/github-actions/tree/main/public"),Op.forEach(n),Mn.forEach(n),Qa=c(s),qs=e(s,"P",{});var Pp=o(qs);qe=i(Pp,"We can build a simple component that makes a call to those json files the actions created.  In this example, we\u2019ll log the response:"),Pp.forEach(n),Wa=c(s),fs=e(s,"PRE",{class:!0});var tl=o(fs);tl.forEach(n),Ba=c(s),Ds=e(s,"BLOCKQUOTE",{});var Rp=o(Ds);Wn=e(Rp,"P",{});var Hp=o(Wn);De=i(Hp,"\u{1F4C4} You can copy and paste this code in your browser\u2019s console and it will return a json object."),Hp.forEach(n),Rp.forEach(n),Fa=c(s),Qs=e(s,"P",{});var Lp=o(Qs);Qe=i(Lp,"The next step is to build out a frontend component using html and css. Below is the component that was built and used on the homepage of this website:"),Lp.forEach(n),Ma=c(s),mo(ds.$$.fragment,s),za=c(s),Ja=e(s,"HR",{}),Ka=c(s),X=e(s,"H3",{id:!0});var fo=o(X);Z=e(fo,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var xp=o(Z);Bn=e(xp,"SPAN",{class:!0}),o(Bn).forEach(n),xp.forEach(n),We=i(fo,"Final Thoughts"),fo.forEach(n),Ya=c(s),Ws=e(s,"P",{});var $p=o(Ws);Be=i($p,"GitHub Actions provide a powerful way to automate issue tracking and boost transparency. By integrating GraphQL and automating with cron jobs, we can stay organized and communicate our progress with players in real-time."),$p.forEach(n),Xa=c(s),V=e(s,"P",{});var tt=o(V);Fe=i(tt,"Ready to set up your own tracker? "),hs=e(tt,"A",{href:!0,rel:!0});var Ip=o(hs);Me=i(Ip,"Fork our repo"),Ip.forEach(n),ze=i(tt," and start automating your project."),tt.forEach(n),Za=c(s),mo(ys.$$.fragment,s),this.h()},h(){k(pn,"class","icon icon-link"),k(P,"aria-hidden","true"),k(P,"tabindex","-1"),k(P,"href","#what-are-github-actions"),k(O,"id","what-are-github-actions"),k(fn,"class","icon icon-link"),k(H,"aria-hidden","true"),k(H,"tabindex","-1"),k(H,"href","#setting-up-github-personal-access-tokens-pat"),k(R,"id","setting-up-github-personal-access-tokens-pat"),k(dn,"class","icon icon-link"),k(x,"aria-hidden","true"),k(x,"tabindex","-1"),k(x,"href","#steps-to-generate-a-pat"),k(L,"id","steps-to-generate-a-pat"),k(vn,"class","icon icon-link"),k(C,"aria-hidden","true"),k(C,"tabindex","-1"),k(C,"href","#storing-and-referencing-the-pat-securely"),k(I,"id","storing-and-referencing-the-pat-securely"),k(es,"class","language-yaml"),k(Sn,"class","icon icon-link"),k(j,"aria-hidden","true"),k(j,"tabindex","-1"),k(j,"href","#breaking-down-the-github-action-workflow"),k(U,"id","breaking-down-the-github-action-workflow"),k(os,"class","language-undefined"),k(Gn,"class","icon icon-link"),k(D,"aria-hidden","true"),k(D,"tabindex","-1"),k(D,"href","#example-workflow"),k(q,"id","example-workflow"),k(ps,"class","language-yaml"),k(Nn,"class","icon icon-link"),k(W,"aria-hidden","true"),k(W,"tabindex","-1"),k(W,"href","#why-use-graphql"),k(Q,"id","why-use-graphql"),k($n,"class","icon icon-link"),k(M,"aria-hidden","true"),k(M,"tabindex","-1"),k(M,"href","#graphql-returning-exactly-what-we-want"),k(F,"id","graphql-returning-exactly-what-we-want"),k(ls,"class","language-graphql"),k(rs,"class","language-json"),k(Un,"class","icon icon-link"),k(J,"aria-hidden","true"),k(J,"tabindex","-1"),k(J,"href","#rest-returning-everything"),k(z,"id","rest-returning-everything"),k(is,"class","language-bash"),k(us,"class","language-json"),k(Dn,"class","icon icon-link"),k(Y,"aria-hidden","true"),k(Y,"tabindex","-1"),k(Y,"href","#outputting-to-json-for-frontend-use"),k(K,"id","outputting-to-json-for-frontend-use"),k(cs,"class","language-json"),k(ks,"href","https://github.com/3ee-Games/github-actions/tree/main/public"),k(ks,"rel","nofollow"),k(fs,"class","language-javascript"),k(Bn,"class","icon icon-link"),k(Z,"aria-hidden","true"),k(Z,"tabindex","-1"),k(Z,"href","#final-thoughts"),k(X,"id","final-thoughts"),k(hs,"href","https://github.com/3ee-Games/github-actions"),k(hs,"rel","nofollow")},m(s,p){l(s,f,p),a(f,b),a(f,m),a(m,ss),a(f,d),l(s,y,p),l(s,A,p),a(A,et),l(s,zn,p),l(s,h,p),a(h,Ys),a(Ys,Xs),a(Xs,ot),a(h,pt),a(h,Zs),a(Zs,Vs),a(Vs,lt),a(h,rt),a(h,sn),a(sn,nn),a(nn,it),a(h,ut),a(h,an),a(an,tn),a(tn,ct),a(h,kt),a(h,en),a(en,on),a(on,ft),l(s,Jn,p),l(s,Kn,p),l(s,Yn,p),l(s,O,p),a(O,P),a(P,pn),a(O,dt),l(s,Xn,p),l(s,_s,p),a(_s,ht),l(s,Zn,p),l(s,Es,p),a(Es,ln),a(ln,yt),l(s,Vn,p),l(s,_,p),a(_,vs),a(vs,rn),a(rn,mt),a(vs,bt),a(_,_t),a(_,ws),a(ws,un),a(un,Et),a(ws,vt),a(_,wt),a(_,gs),a(gs,cn),a(cn,gt),a(gs,Tt),l(s,sa,p),l(s,ns,p),a(ns,kn),a(kn,At),a(ns,St),l(s,na,p),l(s,aa,p),l(s,ta,p),l(s,R,p),a(R,H),a(H,fn),a(R,Gt),l(s,ea,p),l(s,Ts,p),a(Ts,Nt),l(s,oa,p),l(s,L,p),a(L,x),a(x,dn),a(L,Ot),l(s,pa,p),l(s,E,p),a(E,as),a(as,Pt),a(as,hn),a(hn,Rt),a(as,Ht),a(E,Lt),a(E,$),a($,xt),a($,yn),a(yn,$t),a($,It),a($,S),a(S,As),a(As,mn),a(mn,Ct),a(As,Ut),a(S,jt),a(S,Ss),a(Ss,bn),a(bn,qt),a(Ss,Dt),a(S,Qt),a(S,Gs),a(Gs,_n),a(_n,Wt),a(Gs,Bt),a(E,Ft),a(E,En),a(En,Mt),l(s,la,p),l(s,I,p),a(I,C),a(C,vn),a(I,zt),l(s,ra,p),l(s,v,p),a(v,ts),a(ts,Jt),a(ts,wn),a(wn,Kt),a(ts,Yt),a(v,Xt),a(v,G),a(G,Zt),a(G,gn),a(gn,Vt),a(G,se),a(G,Tn),a(Tn,ne),a(G,ae),a(v,te),a(v,An),a(An,ee),l(s,ia,p),l(s,es,p),es.innerHTML=qp,l(s,ua,p),l(s,ca,p),l(s,ka,p),l(s,U,p),a(U,j),a(j,Sn),a(U,oe),l(s,fa,p),l(s,Ns,p),a(Ns,pe),l(s,da,p),l(s,os,p),os.innerHTML=Dp,l(s,ha,p),l(s,q,p),a(q,D),a(D,Gn),a(q,le),l(s,ya,p),l(s,ps,p),ps.innerHTML=Qp,l(s,ma,p),l(s,ba,p),l(s,_a,p),l(s,Q,p),a(Q,W),a(W,Nn),a(Q,re),l(s,Ea,p),l(s,B,p),a(B,ie),a(B,On),a(On,ue),a(B,ce),l(s,va,p),l(s,w,p),a(w,Os),a(Os,Pn),a(Pn,ke),a(Os,fe),a(w,de),a(w,g),a(g,Rn),a(Rn,he),a(g,ye),a(g,Hn),a(Hn,me),a(g,be),a(g,Ln),a(Ln,_e),a(g,Ee),a(w,ve),a(w,Ps),a(Ps,xn),a(xn,we),a(Ps,ge),l(s,wa,p),l(s,Rs,p),a(Rs,Te),l(s,ga,p),l(s,F,p),a(F,M),a(M,$n),a(F,Ae),l(s,Ta,p),l(s,Hs,p),a(Hs,Se),l(s,Aa,p),l(s,Ls,p),a(Ls,In),a(In,Ge),l(s,Sa,p),l(s,ls,p),ls.innerHTML=Wp,l(s,Ga,p),l(s,xs,p),a(xs,Cn),a(Cn,Ne),l(s,Na,p),l(s,rs,p),rs.innerHTML=Bp,l(s,Oa,p),l(s,z,p),a(z,J),a(J,Un),a(z,Oe),l(s,Pa,p),l(s,$s,p),a($s,Pe),l(s,Ra,p),l(s,Is,p),a(Is,jn),a(jn,Re),l(s,Ha,p),l(s,is,p),is.innerHTML=Fp,l(s,La,p),l(s,Cs,p),a(Cs,qn),a(qn,He),l(s,xa,p),l(s,us,p),us.innerHTML=Mp,l(s,$a,p),l(s,Us,p),a(Us,Le),l(s,Ia,p),l(s,Ca,p),l(s,Ua,p),l(s,K,p),a(K,Y),a(Y,Dn),a(K,xe),l(s,ja,p),l(s,js,p),a(js,$e),l(s,qa,p),l(s,cs,p),cs.innerHTML=zp,l(s,Da,p),l(s,N,p),a(N,Ie),a(N,Qn),a(Qn,Ce),a(N,Ue),a(N,ks),a(ks,je),l(s,Qa,p),l(s,qs,p),a(qs,qe),l(s,Wa,p),l(s,fs,p),fs.innerHTML=Jp,l(s,Ba,p),l(s,Ds,p),a(Ds,Wn),a(Wn,De),l(s,Fa,p),l(s,Qs,p),a(Qs,Qe),l(s,Ma,p),bo(ds,s,p),l(s,za,p),l(s,Ja,p),l(s,Ka,p),l(s,X,p),a(X,Z),a(Z,Bn),a(X,We),l(s,Ya,p),l(s,Ws,p),a(Ws,Be),l(s,Xa,p),l(s,V,p),a(V,Fe),a(V,hs),a(hs,Me),a(V,ze),l(s,Za,p),bo(ys,s,p),Va=!0},p:rl,i(s){Va||(_o(ds.$$.fragment,s),_o(ys.$$.fragment,s),Va=!0)},o(s){Eo(ds.$$.fragment,s),Eo(ys.$$.fragment,s),Va=!1},d(s){s&&n(f),s&&n(y),s&&n(A),s&&n(zn),s&&n(h),s&&n(Jn),s&&n(Kn),s&&n(Yn),s&&n(O),s&&n(Xn),s&&n(_s),s&&n(Zn),s&&n(Es),s&&n(Vn),s&&n(_),s&&n(sa),s&&n(ns),s&&n(na),s&&n(aa),s&&n(ta),s&&n(R),s&&n(ea),s&&n(Ts),s&&n(oa),s&&n(L),s&&n(pa),s&&n(E),s&&n(la),s&&n(I),s&&n(ra),s&&n(v),s&&n(ia),s&&n(es),s&&n(ua),s&&n(ca),s&&n(ka),s&&n(U),s&&n(fa),s&&n(Ns),s&&n(da),s&&n(os),s&&n(ha),s&&n(q),s&&n(ya),s&&n(ps),s&&n(ma),s&&n(ba),s&&n(_a),s&&n(Q),s&&n(Ea),s&&n(B),s&&n(va),s&&n(w),s&&n(wa),s&&n(Rs),s&&n(ga),s&&n(F),s&&n(Ta),s&&n(Hs),s&&n(Aa),s&&n(Ls),s&&n(Sa),s&&n(ls),s&&n(Ga),s&&n(xs),s&&n(Na),s&&n(rs),s&&n(Oa),s&&n(z),s&&n(Pa),s&&n($s),s&&n(Ra),s&&n(Is),s&&n(Ha),s&&n(is),s&&n(La),s&&n(Cs),s&&n(xa),s&&n(us),s&&n($a),s&&n(Us),s&&n(Ia),s&&n(Ca),s&&n(Ua),s&&n(K),s&&n(ja),s&&n(js),s&&n(qa),s&&n(cs),s&&n(Da),s&&n(N),s&&n(Qa),s&&n(qs),s&&n(Wa),s&&n(fs),s&&n(Ba),s&&n(Ds),s&&n(Fa),s&&n(Qs),s&&n(Ma),vo(ds,s),s&&n(za),s&&n(Ja),s&&n(Ka),s&&n(X),s&&n(Ya),s&&n(Ws),s&&n(Xa),s&&n(V),s&&n(Za),vo(ys,s)}}}function fl(bs){let f,b;const m=[bs[0],jp];let ss={$$slots:{default:[kl]},$$scope:{ctx:bs}};for(let d=0;d<m.length;d+=1)ss=ho(ss,m[d]);return f=new il({props:ss}),{c(){yo(f.$$.fragment)},l(d){mo(f.$$.fragment,d)},m(d,y){bo(f,d,y),b=!0},p(d,[y]){const A=y&1?ll(m,[y&1&&Cp(d[0]),y&0&&Cp(jp)]):{};y&2&&(A.$$scope={dirty:y,ctx:d}),f.$set(A)},i(d){b||(_o(f.$$.fragment,d),b=!0)},o(d){Eo(f.$$.fragment,d),b=!1},d(d){vo(f,d)}}}const jp={title:"Github Actions 101",date:"2025-01-06 12:34:20",modifiedDate:"2025-01-18 13:00:00",categories:["github","automation","web development"],svg:"Api",youtubeId:"wx6eOvvGEc8",seoImage:"https://res.cloudinary.com/dxgyuy0iu/image/upload/v1736376656/blog/ydtnowkeirmxxcyjoyr5.png",shortDescription:"Learn how 3ee Games uses Github Actions and GraphQL to automate issue tracking, enhancing transparency in game development.",keywords:["github","issue tracker","transparency","web development","actions","automation"],author:"Ryan Sadwick"};function dl(bs,f,b){return bs.$$set=m=>{b(0,f=ho(ho({},f),Up(m)))},f=Up(f),[f]}class Sl extends el{constructor(f){super(),ol(this,f,dl,fl,pl,{})}}export{Sl as default,jp as metadata};
